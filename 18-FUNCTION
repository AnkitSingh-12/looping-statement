#1#
# print prime no in given range by using function approach 

def isprime(n):
    if n>1:
       for i in range (2,n//2+1):
            if n%i==0:
                return False
       else:
            return True
    else:
         return False
def primeNumber(LL,UL):
    for i in range(LL,UL+1):
        if isprime(i):
            print(i)
primeNumber(1,20)

#----------------------------------------------------------------#

#2#
#print even no of given range by using of function approach

def iseven(n):
    if n%2==0:
        return True
    else:
        return False
def evenNumber(LL,UL):
    for i in range(LL,UL+1):
        if iseven(i):
            print(i)
evenNumber(1,10)

#--------------------------------------------------------------------#

#3# print paliprime no is given range by using of functional approach 

def isprime(n):
    if n>1:
       for i in range (2,n//2+1):
            if n%i==0:
                return False
       else:
            return True
    else:
         return False
def reverse(n):
    dummy=n
    rev=0
    while dummy>0:
        rem=dummy%10
        dummy=dummy//10
        rev=rev*10+rem
    return rev
def ispaliprime(n):
    rev=reverse(n)
    if isprime(n) and n==rev:
        return True
    else:
        return False
def paliprimeNumber(LL,UL):
    for n in range (LL,UL+1):
        if ispaliprime(n):
            print(n)
paliprimeNumber(1,20)

#-----------------------------------------------------------------#
#4# print emirp no is given range by using of functional approach 

def isprime(n):
    if n>1:
       for i in range (2,n//2+1):
            if n%i==0:
                return False
       else:
            return True
    else:
          return False
def reverse(n):
    dummy=n
    rev=0
    while dummy>0:
        rem=dummy%10
        dummy=dummy//10
        rev=rev*10+rem
    return rev
def isemirp(n):
     rev=reverse(n)
     if isprime(n)and isprime(rev)and n!=rev:
         return True
     else:
         return False
def emirpNumber(LL,UL):
    for n in range (LL,UL+1):
        if isemirp(n):
            print(n)
emirpNumber(1,20)
#-----------------------------------------------------------------#
#5#  print palindrome no is given range by using of functional approach 

def ispalindrome(n):
    dummy=n
    rev=0
    while dummy>0:
        rem=dummy%10
        dummy=dummy//10
        rev=rev*10+rem
    if n==rev:
        return True
    else:
        return False
def palidromeNumber(LL,UL):
    for n in range (LL,UL+1):
        if ispalindrome(n):
            print(n)
palidromeNumber(1,20)


#-----------------------------------------------------------------------#
#6#  print perfect no is given range by using of functional approach


def isperfectNo(n):
    dsum=0
    for i in range(1,n//2+1):
      if n%i==0:
         dsum+=i
    if dsum==n:
        return True
    else:
        return False
def perfectNumber(LL,UL):
    for n in range (LL,UL+1):
        if isperfectNo(n):
            print(n)
perfectNumber(1,100)


#-----------------------------------------------------------------------#
#7#  print ARMSTRONG no is given range by using of functional approach

def isarmstrongNo(n):
    dummy=n
    sum=0
    L=len(str(n))
    while dummy>0:
        rem=dummy%10
        dummy=dummy//10
        sum+=rem**L
    if n==sum:
        return True
    else:
        return False
def armstrongNumber(LL,UL):
    for n in range (LL,UL+1):
        if isarmstrongNo(n):
            print(n)
armstrongNumber(1,100)


#-----------------------------------------------------------------------#
